Existem situação em que se tem mais de um container dentro de um mesmo pod, esse container adicional é chamado de side car. Um exemplo de uso do cantainer side car é o consumo de métricas para exportá-las para o prometheus, por exemplo.

A boa prática é sempre criar a sua aplicação a partir de um deployment, pois ele gerencia toda a infra da sua aplicação garantindo, por exemplo, que a sua aplicação rode sempre com a quantidade de pods solicitadas.

Para saber qual pod o deploy deve gerenciar é necessário ouso de labels. Dentro da estrutura do deployment tem-se a definição do próprio deployment, do pod e do(s) container(s).

Informações referente a configuração devem ser colocadas ou dentro de um config map(variáveis que podem ser visíveis) ou dentro do secret (informações sensíveis).


Aula 04:

Ao trabalhar com um repositório privado no ECR é preciso configurar um image pull secret para que as instâncias do EKS consigam fazer o pull da imagem com sucesso.

Aula 08: Readiness e Liveness --> Probes

Readiness: Garante que o container receberá requisições de fato quando estiver pronto para tal.   

Liveness: Um determinado endpoint pode ser apontado para que o container possa ficar fazendo um helth check. Em caso de falha do health o container pode ser reiniciado.

Aula 09: Service Account

Uma service account é uma identidade que é atribuída a um POD.

                role binding
Service account   <----->   RBAC (permissionamento)

Ao configurar uma conta de serviço na spec do seu deployment, um diretório com um token é criado dentro do container. Ao fazer o describe do pod é possível ver o nome da service account e a localização do diretório que foi criado com o token. A essa SA é possível atribuir RBACs.

Aula 10: Security Context

Aula 11: Deployment / Mongo Secret

Aula 12: Deploy demais microservicos

Aula 13: Deployment Topology Spread Constraints - Topologia de restrição de propagação

Aula 14: Node Port Services e Topology Aware Routing

Aula 15: ACM Certificate

    - Fiz a criação do certificado para o nosso domínio e a validação via teraform.

Aula 16: Ingress

    - Realizada a criação do ingress. Quando criado ele provisiona um ALB onde lá existirá o apontamento (listeners) para cada um dos paths existentes na aplicação. No nosso caso aqui: notificator - identity - invoice - order

Aula 17: External DNS e AWS Route 53

    - External DNS --> Permite realizar o gerenciamento dos domínios a partir do kubernets.

